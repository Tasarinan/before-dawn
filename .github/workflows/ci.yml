name: Run tests
on: push
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        node-version: [16.x]
    env:
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    steps:
    - name: Install ubuntu requirements
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y libx11-dev libxss-dev icnsutils graphicsmagick libappindicator1 libxtst-dev
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Patch node-gyp
      if: ${{ matrix.os == 'windows-latest' }}
      shell: powershell
      run: |
        npm install --global node-gyp@latest
        npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
    # https://github.com/actions/setup-node/issues/68
    # - name: Install node-gyp
    #   run: npm install -g node-gyp
    # - name: Get yarn cache directory
    #   id: yarn-cache
    #   run: |
    #     echo "::set-output name=dir::$(yarn config get cache)"
    # - uses: actions/cache@v1
    #   with:
    #     path: ${{ steps.yarn-cache.outputs.dir }}
    #     key: ${{ runner.os }}-node-${{ hashFiles('**/yarn-lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node-
    - name: Setup
      run: yarn
    - run: yarn test-lib
    - name: Run integration tests
      if: ${{ matrix.os != 'ubuntu-latest' }}
      run: yarn test-ui
